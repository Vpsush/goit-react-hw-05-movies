{"version":3,"file":"static/js/251.a80e4d73.chunk.js","mappings":"+NAAO,IAAMA,EAAU,mCACVC,EAAW,gCACXC,EACX,6E,wJCAWC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAO,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACfC,EAAAA,EAAAA,IAAU,GAADC,OAC3Bd,EAAAA,GAAQ,UAAAc,OAASP,EAAO,qBAAAO,OAAoBf,EAAAA,KAC/C,KAAD,EAFW,OAEXS,EAAAE,EAAAK,KAFON,EAAID,EAAJC,KAAIC,EAAAM,OAAA,SAGLP,GAAI,wBAAAC,EAAAO,OAAA,GAAAX,EAAA,KACZ,gBALuBY,GAAA,OAAAf,EAAAgB,MAAA,KAAAC,UAAA,KAOXC,EAAW,eAAAC,GAAAlB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkB,EAAMhB,GAAO,IAAAiB,EAAAf,EAAA,OAAAJ,IAAAA,MAAA,SAAAoB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACfC,EAAAA,EAAAA,IAAU,GAADC,OAC3Bd,EAAAA,GAAQ,WAAAc,OAAUP,EAAO,qBAAAO,OAAoBf,EAAAA,KAChD,KAAD,EAFW,OAEXyB,EAAAC,EAAAV,KAFON,EAAIe,EAAJf,KAAIgB,EAAAT,OAAA,SAGLP,GAAI,wBAAAgB,EAAAR,OAAA,GAAAM,EAAA,KACZ,gBALuBG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KAOXO,EAAc,eAAAC,GAAAxB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwB,IAAA,IAAAC,EAAArB,EAAA,OAAAJ,IAAAA,MAAA,SAAA0B,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACLC,EAAAA,EAAAA,IAAU,GAADC,OAC3Bd,EAAAA,GAAQ,+CAAAc,OAA8Cf,EAAAA,KACzD,KAAD,EAFW,OAEX+B,EAAAC,EAAAhB,KAFON,EAAIqB,EAAJrB,KAAIsB,EAAAf,OAAA,SAGLP,GAAI,wBAAAsB,EAAAd,OAAA,GAAAY,EAAA,KACZ,kBAL0B,OAAAD,EAAAT,MAAA,KAAAC,UAAA,I,uFCgG3B,UAvDa,WACX,IAAQb,GAAYyB,EAAAA,EAAAA,MAAZzB,QACR0B,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAgBT,EAAAA,EAAAA,UAAS,MAAlBU,GAAuBR,EAAAA,EAAAA,GAAAO,EAAA,GAAlB,GA2BZ,OAPAE,EAAAA,EAAAA,YAAU,YACR3C,EAAAA,EAAAA,IAAYK,GAASuC,MAAK,SAAA3C,GAAe,IAAZ4C,EAAI5C,EAAJ4C,KAC3BT,EAAUS,GACVL,GAAa,EACf,GACF,GAAG,CAACnC,KAGFyC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,SAEHR,IAAaS,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAChBL,IAASI,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,UAAQL,KACpBP,EAAOc,KAAI,SAAA7B,GAAA,IAAG8B,EAAY9B,EAAZ8B,aAAcC,EAAE/B,EAAF+B,GAAIC,EAAIhC,EAAJgC,KAAMC,EAASjC,EAATiC,UAAS,OAC9CP,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEM,IACEJ,EAAY,mCAAAtC,OAC2BsC,GACnCnD,EAAAA,GAENwD,IAAG,GAAA3C,OAAKwC,EAAI,gBAEdJ,EAAAA,EAAAA,KAAA,KAAAD,SAAIK,KACJN,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYM,OAVPF,EAWJ,MAId,C,8EC1DA,UA/CgB,WACd,IAAQ9C,GAAYyB,EAAAA,EAAAA,MAAZzB,QACR0B,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCyB,EAAOvB,EAAA,GAAEwB,EAAUxB,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAgBT,EAAAA,EAAAA,UAAS,MAAlBU,GAAuBR,EAAAA,EAAAA,GAAAO,EAAA,GAAlB,GA0BZ,OAPAE,EAAAA,EAAAA,YAAU,YACRxB,EAAAA,EAAAA,IAAYd,GAASuC,MAAK,SAAA3C,GAAiB,IAAdyD,EAAMzD,EAANyD,OAC3BD,EAAWC,GACXlB,GAAa,EACf,GACF,GAAG,CAACnC,IAEsB,IAAnBmD,EAAQG,QACbX,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAEJD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACHR,IAAaS,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAChBL,IAASI,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,UAAQL,KACpBc,EAAQP,KAAI,SAAAS,GAAM,OACjBZ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIW,EAAOE,UACXZ,EAAAA,EAAAA,KAAA,KAAAD,SAAIW,EAAOG,YAFHH,EAAOP,GAGX,MAId,C,2LCzBA,EArBmB,WACjB,IAAQ9C,GAAYyB,EAAAA,EAAAA,MAAZzB,QACR,OACEyC,EAAAA,EAAAA,MAACgB,EAAAA,EAAY,CAAAf,SAAA,EACXD,EAAAA,EAAAA,MAAA,OAAKiB,UAAU,kBAAiBhB,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJC,EAAAA,EAAAA,KAACgB,EAAAA,GAAO,CAACD,UAAU,cAAcE,GAAE,WAAArD,OAAaP,EAAO,SAAQ0C,SAAC,UAGhEC,EAAAA,EAAAA,KAACgB,EAAAA,GAAO,CAACD,UAAU,cAAcE,GAAE,WAAArD,OAAaP,EAAO,YAAW0C,SAAC,gBAIrED,EAAAA,EAAAA,MAACoB,EAAAA,GAAM,CAAAnB,SAAA,EACLC,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CAACC,KAAK,OAAOC,SAASrB,EAAAA,EAAAA,KAACsB,EAAAA,QAAI,OACjCtB,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CAACC,KAAK,UAAUC,SAASrB,EAAAA,EAAAA,KAACuB,EAAAA,QAAO,WAI/C,E,SCyHA,EA/D0B,WAAO,IAADC,EAAAC,EAAAC,EACtBrE,GAAYyB,EAAAA,EAAAA,MAAZzB,QACR0B,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C4C,EAAY1C,EAAA,GAAE2C,EAAe3C,EAAA,GACpCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAK6C,GAAA3C,EAAAA,EAAAA,GAAAO,EAAA,GAAjCC,EAAKmC,EAAA,GAAEC,EAAQD,EAAA,GAChBE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAA2B,QAArBZ,EAAe,QAAfC,EAACM,EAASM,aAAK,IAAAZ,OAAA,EAAdA,EAAgBa,YAAI,IAAAd,EAAAA,EAAI,KAoBnD,OAlBA7B,EAAAA,EAAAA,YAAU,WACR,IAAM4C,EAAiB,eAAAtF,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAE,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEH,OAFGF,EAAAC,KAAA,EAEtB+B,GAAa,GAAMhC,EAAAE,KAAA,EACIC,EAAAA,EAAAA,IAAU,GAADC,OAC3Bd,EAAAA,GAAQ,WAAAc,OAAUP,EAAO,4BAAAO,OAA2Bf,EAAAA,KACvD,KAAD,EAAAS,EAAAE,EAAAK,KAFON,EAAID,EAAJC,KAGRqE,EAAgBrE,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAgF,GAAAhF,EAAA,SAEtBsE,EAAStE,EAAAgF,GAAMC,SAAS,QAEJ,OAFIjF,EAAAC,KAAA,GAExB+B,GAAa,GAAOhC,EAAAkF,OAAA,6BAAAlF,EAAAO,OAAA,GAAAX,EAAA,wBAEvB,kBAZsB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAcvBqE,GACF,GAAG,CAAClF,EAASmC,EAAcoC,KAGzB9B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQ2C,QAAS,kBAAMV,EAASE,EAAYS,QAAQ,EAAC7C,SAAC,YAC3C,OAAVL,IAAkBM,EAAAA,EAAAA,KAAA,KAAGe,UAAU,aAAYhB,SAAEL,IAC7CH,IAAaS,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,IACH,OAAjBlB,IACC7B,EAAAA,EAAAA,MAAA,OAAKiB,UAAU,OAAMhB,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEM,IACEqB,EAAamB,YAAW,mCAAAlF,OACe+D,EAAamB,aAChD/F,EAAAA,GAENwD,IAAKoB,EAAaoB,WAGtBjD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAK4B,EAAaoB,SAClBjD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,WAASiD,KAAKC,MAAMtB,EAAauB,kBACpClD,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAI4B,EAAawB,YACjBnD,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SACsB,QADtB2B,EACGC,EAAayB,cAAM,IAAA1B,OAAA,EAAnBA,EAAqBzB,KAAI,SAAAoD,GAAK,OAC7BrD,EAAAA,EAAAA,KAAA,MAAAD,SAAoBsD,EAAMjD,MAAjBiD,EAAMlD,GAAqB,aAM9CH,EAAAA,EAAAA,KAACsD,EAAU,MAGjB,C","sources":["additional/const.jsx","additional/function.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/Navigation/Navigation.jsx","pages/MoviesPageDetails.jsx"],"sourcesContent":["export const API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'additional/const';\n\nexport const fetchActors = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchReview = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchDayMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesDetails = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return data;\n};\n","// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import { API_KEY, BASE_URL, defaultImg } from 'additional/const';\n\n// const Cast = () => {\n//   const { movieId } = useParams();\n//   const [actors, setActors] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchActors = async () => {\n//       try {\n//         const { data } = await axios.get(\n//           `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n//         );\n//         setActors(data.cast);\n//       } catch (error) {\n//         setError(error.message);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n\n//     fetchActors();\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       <h2>Cast</h2>\n\n//       {isLoading && <p>Loading...</p>}\n//       {error && <p>Error: {error}</p>}\n//       {actors.map(({ actor, profile_path }) => (\n//         <div key={actor.id}>\n//           <img\n//             src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n//             // src={`${profile_path ? BASE_URL + profile_path : defaultImg}`}\n//             alt={`${actor.name} portrait`}\n//           />\n//           <p>{actor.name}</p>\n//           <p>Character: {actor.character}</p>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Cast;\n\nimport React, { useState, useEffect } from 'react';\n// import axios from 'axios';\nimport { useParams } from 'react-router-dom';\n// import { API_KEY, BASE_URL } from 'additional/const';\nimport { fetchActors } from 'additional/function';\nimport { defaultImg } from 'additional/const';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error] = useState(null);\n\n  // useEffect(() => {\n  //   const findActors = async () => {\n  //     try {\n  //       const { data } = await axios.get(\n  //         `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  //       );\n  //       setActors(data.cast);\n\n  //     } catch (error) {\n  //       setError(error.message);\n  //     } finally {\n  //       setIsLoading(false);\n  //     }\n  //   };\n\n  //   findActors();\n  // }, [movieId]);\n\n  useEffect(() => {\n    fetchActors(movieId).then(({ cast }) => {\n      setActors(cast);\n      setIsLoading(false);\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {actors.map(({ profile_path, id, name, character }) => (\n        <div key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                : defaultImg\n            }\n            alt={`${name} portrait`}\n          />\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\nimport { useParams } from 'react-router-dom';\n// import { API_KEY, BASE_URL } from 'additional/const';\nimport { fetchReview } from 'additional/function';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error] = useState(null);\n\n  // useEffect(() => {\n  //   const fetchReviews = async () => {\n  //     try {\n  //       const { data } = await axios.get(\n  //         `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  //       );\n  //       setReviews(data.results);\n  //     } catch (error) {\n  //       setError(error.message);\n  //     } finally {\n  //       setIsLoading(false);\n  //     }\n  //   };\n\n  //   fetchReviews();\n  // }, [movieId]);\n\n  useEffect(() => {\n    fetchReview(movieId).then(({ review }) => {\n      setReviews(review);\n      setIsLoading(false);\n    });\n  }, [movieId]);\n\n  return reviews.length === 0 ? (\n    <h3>No Reviews.</h3>\n  ) : (\n    <div>\n      <h2>Reviews</h2>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {reviews.map(review => (\n        <div key={review.id}>\n          <p>{review.author}</p>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import { StyledMovies } from '../../Movies.styled';\nimport { NavLink, Route, Routes, useParams } from 'react-router-dom';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nconst Navigation = () => {\n  const { movieId } = useParams();\n  return (\n    <StyledMovies>\n      <div className=\"additionalTitle\">\n        <h3>Additional information</h3>\n        <NavLink className=\"header-link\" to={`/movies/${movieId}/cast`}>\n          Cast\n        </NavLink>\n        <NavLink className=\"header-link\" to={`/movies/${movieId}/reviews`}>\n          Reviews\n        </NavLink>\n      </div>\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </StyledMovies>\n  );\n};\n\nexport default Navigation;\n","// import React, { useState, useEffect, useRef } from 'react';\n// import axios from 'axios';\n// import { useLocation, useParams, Link } from 'react-router-dom';\n// import Loader from '../components/Loader/Loader';\n// import Navigation from '../components/Navigation/Navigation';\n// import { API_KEY, BASE_URL } from '../additional/const';\n// import { defaultImg } from '../additional/const';\n// // import { fetchMoviesDetails } from 'additional/function';\n\n// const MoviesPageDetails = () => {\n//   const { movieId } = useParams();\n//   const [movieDetails, setMovieDetails] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const location = useLocation();\n//   console.log('from', location);\n//   const backLinkRef = useRef(location.state?.from ?? '/');\n\n//   useEffect(() => {\n//     const fetchMovieDetails = async () => {\n//       try {\n//         setIsLoading(true);\n//         const { data } = await axios.get(\n//           `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n//         );\n//         setMovieDetails(data);\n//       } catch (error) {\n//         setError(error.message);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n\n//     fetchMovieDetails();\n//   }, [movieId, setIsLoading, setMovieDetails]);\n\n//   return (\n//     <div>\n//       <Link to={backLinkRef.current}>Go back</Link>\n//       {error !== null && <p className=\"error-bage\">{error}</p>}\n//       {isLoading && <Loader />}\n//       {movieDetails !== null && (\n//         <div className=\"info\">\n//           <div>\n//             <img\n//               src={\n//                 movieDetails.poster_path\n//                   ? `https://image.tmdb.org/t/p/w200/${movieDetails.poster_path}`\n//                   : defaultImg\n//               }\n//               alt={movieDetails.title}\n//             />\n//           </div>\n//           <div>\n//             <h2>{movieDetails.title}</h2>\n//             <p>Rating: {Math.round(movieDetails.vote_average)}</p>\n//             <h2>Overview</h2>\n//             <p>{movieDetails.overview}</p>\n//             <h2>Genres</h2>\n//             <p>\n//               {movieDetails.genres?.map(genre => (\n//                 <li key={genre.id}>{genre.name}</li>\n//               ))}\n//             </p>\n//           </div>\n//         </div>\n//       )}\n//       <Navigation />\n//     </div>\n//   );\n// };\n\n// export default MoviesPageDetails;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\nimport Loader from '../components/Loader/Loader';\nimport Navigation from '../components/Navigation/Navigation';\nimport { API_KEY, BASE_URL } from '../additional/const';\nimport { defaultImg } from '../additional/const';\n\nconst MoviesPageDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(\n          `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n        );\n        setMovieDetails(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId, setIsLoading, setMovieDetails]);\n\n  return (\n    <div>\n      <button onClick={() => navigate(backLinkRef.current)}>Go back</button>\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n      {movieDetails !== null && (\n        <div className=\"info\">\n          <div>\n            <img\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w200/${movieDetails.poster_path}`\n                  : defaultImg\n              }\n              alt={movieDetails.title}\n            />\n          </div>\n          <div>\n            <h2>{movieDetails.title}</h2>\n            <p>Rating: {Math.round(movieDetails.vote_average)}</p>\n            <h2>Overview</h2>\n            <p>{movieDetails.overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {movieDetails.genres?.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <Navigation />\n    </div>\n  );\n};\n\nexport default MoviesPageDetails;\n"],"names":["API_KEY","BASE_URL","defaultImg","fetchActors","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","_yield$axios$get","data","_context","prev","next","axios","concat","sent","abrupt","stop","_x","apply","arguments","fetchReview","_ref2","_callee2","_yield$axios$get2","_context2","_x2","fetchDayMovies","_ref3","_callee3","_yield$axios$get3","_context3","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","_useState5","error","useEffect","then","cast","_jsxs","children","_jsx","map","profile_path","id","name","character","src","alt","reviews","setReviews","review","length","author","content","StyledMovies","className","NavLink","to","Routes","Route","path","element","Cast","Reviews","_location$state$from","_location$state","_movieDetails$genres","movieDetails","setMovieDetails","_useState6","setError","location","useLocation","navigate","useNavigate","backLinkRef","useRef","state","from","fetchMovieDetails","t0","message","finish","onClick","current","Loader","poster_path","title","Math","round","vote_average","overview","genres","genre","Navigation"],"sourceRoot":""}