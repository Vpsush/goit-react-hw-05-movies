{"version":3,"file":"static/js/797.804a21d7.chunk.js","mappings":"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","sources":["pages/Cast.jsx","pages/MoviesPage.jsx","pages/Reviews.jsx"],"sourcesContent":["// import React from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const Cast = () => {\n//   const { moviesId } = useParams;\n//   return <div>reviews:{moviesId}</div>;\n// };\n\n// export default Cast;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst PageActors = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      try {\n        const { data } = await axios.get(\n          `movie/${movieId}/credits?api_key=${API_KEY}`\n        );\n        setActors(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchActors();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {actors.map(actor => (\n        <div key={actor.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n            alt={`${actor.name} portrait`}\n          />\n          <p>{actor.name}</p>\n          <p>Character: {actor.character}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PageActors;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n  useSearchParams,\n  Link,\n  Route,\n  Routes,\n  useLocation,\n} from 'react-router-dom';\nimport { StyledMovies } from '../Movies.styled';\nimport Loader from '../components/Loader/Loader';\nimport Cast from 'pages/Cast';\nimport Reviews from 'pages/Reviews';\n\nconst API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  console.log(location);\n\n  const queryValue = searchParams.get('query');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const value = e.currentTarget.elements.searchKey.value;\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    if (!queryValue) return;\n    const fetchSearchMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const { data } = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${queryValue}&api_key=${API_KEY}`\n        );\n\n        setMovieDetails(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSearchMovies();\n  }, [queryValue]);\n\n  return (\n    <StyledMovies>\n      <form className=\"SearchForm\" onSubmit={onFormSubmit}>\n        <label>\n          <input\n            // className=\"SearchFormInput\"\n            type=\"text\"\n            required\n            placeholder=\"Search movies\"\n            name=\"searchKey\"\n          />\n        </label>\n        <button type=\"submit\" className=\"SearchFormButton\"></button>\n      </form>\n      {isLoading && <Loader />}\n      {error && <p className=\"error\">Error: {error}</p>}\n      {movieDetails && (\n        <div>\n          <h1>Search Results</h1>\n          <ul>\n            {movieDetails.results.map(movie => (\n              <li key={movie.id}>\n                <Link state={{ form: location }} to={`/movies/${movie.id}`}>\n                  {movie.original_title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Reviews />} />\n          </Routes>\n        </div>\n      )}\n    </StyledMovies>\n  );\n};\n\nexport default Movies;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst PageReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { data } = await axios.get(\n          `movie/${movieId}/reviews?api_key=${API_KEY}`\n        );\n        setReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {reviews.map(review => (\n        <div key={review.id}>\n          <p>{review.author}</p>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PageReviews;\n"],"names":["axios","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchActors","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","cast","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","map","actor","src","profile_path","alt","name","character","id","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieDetails","setMovieDetails","location","useLocation","console","log","queryValue","get","fetchSearchMovies","StyledMovies","className","onSubmit","e","preventDefault","value","currentTarget","elements","searchKey","query","type","required","placeholder","Loader","results","movie","Link","state","form","to","original_title","Routes","Route","path","element","Cast","Reviews","reviews","setReviews","fetchReviews","review","author","content"],"sourceRoot":""}