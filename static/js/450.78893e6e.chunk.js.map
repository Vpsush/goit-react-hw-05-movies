{"version":3,"file":"static/js/450.78893e6e.chunk.js","mappings":"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","sources":["pages/Cast.jsx","components/MoviesList.jsx","pages/HomePage.jsx","components/Navigation/Navigation.jsx","pages/MoviesPageDetails.jsx","pages/Reviews.jsx"],"sourcesContent":["// import React from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const Cast = () => {\n//   const { moviesId } = useParams;\n//   return <div>reviews:{moviesId}</div>;\n// };\n\n// export default Cast;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst PageActors = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      try {\n        const { data } = await axios.get(\n          `movie/${movieId}/credits?api_key=${API_KEY}`\n        );\n        setActors(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchActors();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {actors.map(actor => (\n        <div key={actor.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n            alt={`${actor.name} portrait`}\n          />\n          <p>{actor.name}</p>\n          <p>Character: {actor.character}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PageActors;\n","// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// const API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// export default class MoviestList extends Component {\n//   state = {\n//     movies: [],\n//     isLoading: false,\n//     error: null,\n//   };\n\n//   componentDidMount() {\n//     this.fetchMovies();\n//   }\n\n//   fetchMovies = async () => {\n//     try {\n//       this.setState({ isLoading: true });\n//       const { data } = await axios.get(\n//         `trending/movie/day?language=en-US&api_key=${API_KEY}`\n//       );\n//       this.setState({ movies: data.results });\n//     } catch (error) {\n//       this.setState({ error: error.message });\n//     } finally {\n//       this.setState({ isLoading: false });\n//     }\n//   };\n\n//   render() {\n//     const { movies, isLoading, error } = this.state;\n\n//     return (\n//       <div>\n//         <h1>Trending today</h1>\n//         {isLoading && <p>Loading...</p>}\n//         {error && <p>Error: {error}</p>}\n//         {movies && (\n//           <ul>\n//             {movies.map(movie => (\n//               <li key={movie.id}>{movie.original_title}</li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport default class MoviestList extends Component {\n  state = {\n    movies: [],\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  fetchMovies = async () => {\n    try {\n      this.setState({ isLoading: true });\n      const { data } = await axios.get(\n        `trending/movie/day?language=en-US&api_key=${API_KEY}`\n      );\n      this.setState({ movies: data.results });\n    } catch (error) {\n      this.setState({ error: error.message });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  render() {\n    const { movies, isLoading, error } = this.state;\n\n    return (\n      <div>\n        <h1 className=\"titleToday\">Trending today</h1>\n        {isLoading && <p>Loading...</p>}\n        {error && <p>Error: {error}</p>}\n        {movies && (\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>{movie.original_title}</Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import MoviestList from 'components/MoviesList';\nimport React from 'react';\nimport { NavLink, Route, Routes } from 'react-router-dom';\nimport MoviesPageDetails from './MoviesPageDetails';\n\nconst Home = () => {\n  return (\n    <div>\n      <div>\n        <NavLink to=\"movies/:movieId\">\n          <MoviestList />\n        </NavLink>\n      </div>\n      <Routes>\n        <Route path=\"movies/:movieId\" element={<MoviesPageDetails />}></Route>\n      </Routes>\n    </div>\n  );\n};\n\nexport default Home;\n","import { StyledMovies } from '../../Movies.styled';\nimport { NavLink, Route, Routes, useParams } from 'react-router-dom';\nimport Cast from 'pages/Cast';\nimport Reviews from 'pages/Reviews';\n\nconst Navigation = () => {\n  const { movieId } = useParams();\n  return (\n    <StyledMovies>\n      <div className=\"additionalTitle\">\n        <h3>Additional information</h3>\n        <NavLink className=\"header-link\" to={`/movies/${movieId}/cast`}>\n          Cast\n        </NavLink>\n        <NavLink className=\"header-link\" to={`/movies/${movieId}/reviews`}>\n          Reviews\n        </NavLink>\n      </div>\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </StyledMovies>\n  );\n};\n\nexport default Navigation;\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useLocation, useParams, Link } from 'react-router-dom';\nimport Loader from '../components/Loader/Loader';\nimport Navigation from '../components/Navigation/Navigation';\n\nconst API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst MoviesPageDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  console.log('from', location);\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(\n          `movie/${movieId}?language=en-US&api_key=${API_KEY}`\n        );\n        setMovieDetails(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId, setIsLoading, setMovieDetails]);\n\n  return (\n    <div>\n      <Link to={backLinkRef.current}>Go back</Link>\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n      {movieDetails !== null && (\n        <div className=\"info\">\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${movieDetails.poster_path}`}\n              alt={movieDetails.title}\n            />\n          </div>\n          <div>\n            <h2>{movieDetails.title}</h2>\n            <p>Rating: {Math.round(movieDetails.vote_average)}</p>\n            <h2>Overview</h2>\n            <p>{movieDetails.overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {movieDetails.genres?.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </p>\n          </div>\n        </div>\n      )}\n      <Navigation />\n    </div>\n  );\n};\n\nexport default MoviesPageDetails;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst PageReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { data } = await axios.get(\n          `movie/${movieId}/reviews?api_key=${API_KEY}`\n        );\n        setReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {reviews.map(review => (\n        <div key={review.id}>\n          <p>{review.author}</p>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PageReviews;\n"],"names":["axios","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchActors","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","cast","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","map","actor","src","profile_path","alt","name","character","id","API_KEY","MoviestList","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","length","args","Array","_key","call","state","movies","fetchMovies","setState","results","_createClass","key","value","this","_this$state","className","movie","Link","to","original_title","Component","NavLink","Routes","Route","path","element","MoviesPageDetails","StyledMovies","Cast","Reviews","_location$state$from","_location$state","_movieDetails$genres","movieDetails","setMovieDetails","location","useLocation","console","log","backLinkRef","useRef","from","fetchMovieDetails","current","Loader","poster_path","title","Math","round","vote_average","overview","genres","genre","Navigation","reviews","setReviews","fetchReviews","review","author","content"],"sourceRoot":""}