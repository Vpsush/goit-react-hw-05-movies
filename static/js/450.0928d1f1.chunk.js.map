{"version":3,"file":"static/js/450.0928d1f1.chunk.js","mappings":"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","sources":["additional/const.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/MoviesList.jsx","pages/HomePage.jsx","components/Navigation/Navigation.jsx","pages/MoviesPageDetails.jsx"],"sourcesContent":["export const API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const defaultImg =\n  '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { API_KEY, BASE_URL, defaultImg } from 'additional/const';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      try {\n        const { data } = await axios.get(\n          `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n        );\n        setActors(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchActors();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {actors.map(({ actor, profile_path }) => (\n        <div key={actor.id}>\n          <img\n            // src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n            src={`${profile_path ? BASE_URL + profile_path : defaultImg}`}\n            alt={`${actor.name} portrait`}\n          />\n          <p>{actor.name}</p>\n          <p>Character: {actor.character}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { API_KEY, BASE_URL } from 'additional/const';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { data } = await axios.get(\n          `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n        );\n        setReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return reviews.length === 0 ? (\n    <h3>No Reviews.</h3>\n  ) : (\n    <div>\n      <h2>Reviews</h2>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {reviews.map(review => (\n        <div key={review.id}>\n          <p>{review.author}</p>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n","// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// const API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// export default class MoviestList extends Component {\n//   state = {\n//     movies: [],\n//     isLoading: false,\n//     error: null,\n//   };\n\n//   componentDidMount() {\n//     this.fetchMovies();\n//   }\n\n//   fetchMovies = async () => {\n//     try {\n//       this.setState({ isLoading: true });\n//       const { data } = await axios.get(\n//         `trending/movie/day?language=en-US&api_key=${API_KEY}`\n//       );\n//       this.setState({ movies: data.results });\n//     } catch (error) {\n//       this.setState({ error: error.message });\n//     } finally {\n//       this.setState({ isLoading: false });\n//     }\n//   };\n\n//   render() {\n//     const { movies, isLoading, error } = this.state;\n\n//     return (\n//       <div>\n//         <h1>Trending today</h1>\n//         {isLoading && <p>Loading...</p>}\n//         {error && <p>Error: {error}</p>}\n//         {movies && (\n//           <ul>\n//             {movies.map(movie => (\n//               <li key={movie.id}>{movie.original_title}</li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport default class MoviestList extends Component {\n  state = {\n    movies: [],\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  fetchMovies = async () => {\n    try {\n      this.setState({ isLoading: true });\n      const { data } = await axios.get(\n        `trending/movie/day?language=en-US&api_key=${API_KEY}`\n      );\n      this.setState({ movies: data.results });\n    } catch (error) {\n      this.setState({ error: error.message });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  render() {\n    const { movies, isLoading, error } = this.state;\n\n    return (\n      <div>\n        <h1 className=\"titleToday\">Trending today</h1>\n        {isLoading && <p>Loading...</p>}\n        {error && <p>Error: {error}</p>}\n        {movies && (\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>{movie.original_title}</Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import MoviestList from 'components/MoviesList';\nimport React from 'react';\nimport { NavLink, Route, Routes } from 'react-router-dom';\nimport MoviesPageDetails from './MoviesPageDetails';\n\nconst Home = () => {\n  return (\n    <div>\n      <div>\n        <NavLink to=\"movies/:movieId\">\n          <MoviestList />\n        </NavLink>\n      </div>\n      <Routes>\n        <Route path=\"movies/:movieId\" element={<MoviesPageDetails />}></Route>\n      </Routes>\n    </div>\n  );\n};\n\nexport default Home;\n","import { StyledMovies } from '../../Movies.styled';\nimport { NavLink, Route, Routes, useParams } from 'react-router-dom';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nconst Navigation = () => {\n  const { movieId } = useParams();\n  return (\n    <StyledMovies>\n      <div className=\"additionalTitle\">\n        <h3>Additional information</h3>\n        <NavLink className=\"header-link\" to={`/movies/${movieId}/cast`}>\n          Cast\n        </NavLink>\n        <NavLink className=\"header-link\" to={`/movies/${movieId}/reviews`}>\n          Reviews\n        </NavLink>\n      </div>\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </StyledMovies>\n  );\n};\n\nexport default Navigation;\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useLocation, useParams, Link } from 'react-router-dom';\nimport Loader from '../components/Loader/Loader';\nimport Navigation from '../components/Navigation/Navigation';\nimport { API_KEY, BASE_URL } from '../additional/const';\nimport { defaultImg } from '../additional/const';\n// const API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst MoviesPageDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  console.log('from', location);\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(\n          `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n        );\n        setMovieDetails(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId, setIsLoading, setMovieDetails]);\n\n  return (\n    <div>\n      <Link to={backLinkRef.current}>Go back</Link>\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n      {movieDetails !== null && (\n        <div className=\"info\">\n          <div>\n            <img\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w200/${movieDetails.poster_path}`\n                  : defaultImg\n              }\n              alt={movieDetails.title}\n            />\n          </div>\n          <div>\n            <h2>{movieDetails.title}</h2>\n            <p>Rating: {Math.round(movieDetails.vote_average)}</p>\n            <h2>Overview</h2>\n            <p>{movieDetails.overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {movieDetails.genres?.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </p>\n          </div>\n        </div>\n      )}\n      <Navigation />\n    </div>\n  );\n};\n\nexport default MoviesPageDetails;\n"],"names":["API_KEY","BASE_URL","defaultImg","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchActors","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","concat","sent","cast","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","map","_ref2","actor","profile_path","src","alt","name","character","id","reviews","setReviews","fetchReviews","results","length","review","author","content","MoviestList","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","movies","fetchMovies","setState","_createClass","key","value","this","_this$state","className","movie","Link","to","original_title","Component","NavLink","Routes","Route","path","element","MoviesPageDetails","StyledMovies","Cast","Reviews","_location$state$from","_location$state","_movieDetails$genres","movieDetails","setMovieDetails","location","useLocation","console","log","backLinkRef","useRef","from","fetchMovieDetails","current","Loader","poster_path","title","Math","round","vote_average","overview","genres","genre","Navigation"],"sourceRoot":""}