{"version":3,"file":"static/js/251.5e4ec48f.chunk.js","mappings":"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","sources":["additional/const.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/Navigation/Navigation.jsx","pages/MoviesPageDetails.jsx"],"sourcesContent":["export const API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const defaultImg =\n  '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { API_KEY, BASE_URL, defaultImg } from 'additional/const';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      try {\n        const { data } = await axios.get(\n          `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n        );\n        setActors(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchActors();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {actors.map(({ actor, profile_path }) => (\n        <div key={actor.id}>\n          <img\n            // src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n            src={`${profile_path ? BASE_URL + profile_path : defaultImg}`}\n            alt={`${actor.name} portrait`}\n          />\n          <p>{actor.name}</p>\n          <p>Character: {actor.character}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { API_KEY, BASE_URL } from 'additional/const';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { data } = await axios.get(\n          `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n        );\n        setReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return reviews.length === 0 ? (\n    <h3>No Reviews.</h3>\n  ) : (\n    <div>\n      <h2>Reviews</h2>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {reviews.map(review => (\n        <div key={review.id}>\n          <p>{review.author}</p>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import { StyledMovies } from '../../Movies.styled';\nimport { NavLink, Route, Routes, useParams } from 'react-router-dom';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nconst Navigation = () => {\n  const { movieId } = useParams();\n  return (\n    <StyledMovies>\n      <div className=\"additionalTitle\">\n        <h3>Additional information</h3>\n        <NavLink className=\"header-link\" to={`/movies/${movieId}/cast`}>\n          Cast\n        </NavLink>\n        <NavLink className=\"header-link\" to={`/movies/${movieId}/reviews`}>\n          Reviews\n        </NavLink>\n      </div>\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </StyledMovies>\n  );\n};\n\nexport default Navigation;\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useLocation, useParams, Link } from 'react-router-dom';\nimport Loader from '../components/Loader/Loader';\nimport Navigation from '../components/Navigation/Navigation';\nimport { API_KEY, BASE_URL } from '../additional/const';\nimport { defaultImg } from '../additional/const';\n// const API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst MoviesPageDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  console.log('from', location);\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(\n          `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n        );\n        setMovieDetails(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId, setIsLoading, setMovieDetails]);\n\n  return (\n    <div>\n      <Link to={backLinkRef.current}>Go back</Link>\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n      {movieDetails !== null && (\n        <div className=\"info\">\n          <div>\n            <img\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w200/${movieDetails.poster_path}`\n                  : defaultImg\n              }\n              alt={movieDetails.title}\n            />\n          </div>\n          <div>\n            <h2>{movieDetails.title}</h2>\n            <p>Rating: {Math.round(movieDetails.vote_average)}</p>\n            <h2>Overview</h2>\n            <p>{movieDetails.overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {movieDetails.genres?.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </p>\n          </div>\n        </div>\n      )}\n      <Navigation />\n    </div>\n  );\n};\n\nexport default MoviesPageDetails;\n"],"names":["API_KEY","BASE_URL","defaultImg","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchActors","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","concat","sent","cast","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","map","_ref2","actor","profile_path","src","alt","name","character","id","reviews","setReviews","fetchReviews","results","length","review","author","content","StyledMovies","className","NavLink","to","Routes","Route","path","element","Cast","Reviews","_location$state$from","_location$state","_movieDetails$genres","movieDetails","setMovieDetails","location","useLocation","console","log","backLinkRef","useRef","state","from","fetchMovieDetails","Link","current","Loader","poster_path","title","Math","round","vote_average","overview","genres","genre","Navigation"],"sourceRoot":""}