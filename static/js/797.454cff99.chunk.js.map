{"version":3,"file":"static/js/797.454cff99.chunk.js","mappings":"uNAAO,IAAMA,EAAU,mCACVC,EAAW,gCACXC,EACX,6E,4ICkFF,UA1Ee,WACb,IAAAC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA/CG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BR,EAAAA,EAAAA,UAAS,MAAKS,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GAEZ,IAAMI,EAAanB,EAAaoB,IAAI,SA6BpC,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGP,OAHOF,EAAAC,KAAA,EAEtBpB,GAAa,GACbI,EAAS,MAAMe,EAAAE,KAAA,EAEQC,EAAAA,EAAAA,IAAU,6FAADC,OAC+Dd,EAAU,aAAAc,OAAYxC,EAAAA,KACnH,KAAD,EAAAkC,EAAAE,EAAAK,KAFON,EAAID,EAAJC,KAIRtB,EAAgBsB,GAAMC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAEtBf,EAASe,EAAAM,GAAMC,SAAS,QAEJ,OAFIP,EAAAC,KAAA,GAExBpB,GAAa,GAAOmB,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,yBAEvB,kBAfsB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAgBvBlB,GAjBuB,CAkBzB,GAAG,CAACH,KAGFsB,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAAAC,SAAA,EACXF,EAAAA,EAAAA,MAAA,QAAMG,UAAU,aAAaC,SA7BZ,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,cAAcC,SAASC,UAAUH,MACjD/C,EAAgB,CAAEmD,MAAOJ,GAC3B,EAyBwDL,SAAA,EAClDU,EAAAA,EAAAA,KAAA,SAAAV,UACEU,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,UAAQ,EACRC,YAAY,gBACZC,KAAK,iBAGTJ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASV,UAAU,wBAEjCnC,IAAa4C,EAAAA,EAAAA,KAACK,EAAAA,EAAM,IACpB7C,IAAS4B,EAAAA,EAAAA,MAAA,KAAGG,UAAU,QAAOD,SAAA,CAAC,UAAQ9B,KACtCR,IACCoC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEU,EAAAA,EAAAA,KAAA,MAAAV,SAAI,oBACJU,EAAAA,EAAAA,KAAA,MAAAV,SACGtC,EAAasD,QAAQC,KAAI,SAAAC,GAAK,OAC7BR,EAAAA,EAAAA,KAAA,MAAAV,UACEU,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAMjD,GAAYkD,GAAE,WAAAhC,OAAa4B,EAAMK,IAAKvB,SACxDkB,EAAMM,kBAFFN,EAAMK,GAIV,WAWnB,C","sources":["additional/const.jsx","pages/MoviesPage.jsx"],"sourcesContent":["export const API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { StyledMovies } from '../Movies.styled';\nimport Loader from '../components/Loader/Loader';\n// import Cast from 'pages/Cast';\n// import Reviews from 'pages/Reviews';\nimport { API_KEY } from '../additional/const';\n\n// const API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  console.log(location);\n\n  const queryValue = searchParams.get('query');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const value = e.currentTarget.elements.searchKey.value;\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    if (!queryValue) return;\n    const fetchSearchMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const { data } = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${queryValue}&api_key=${API_KEY}`\n        );\n\n        setMovieDetails(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSearchMovies();\n  }, [queryValue]);\n\n  return (\n    <StyledMovies>\n      <form className=\"SearchForm\" onSubmit={onFormSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            required\n            placeholder=\"Search movies\"\n            name=\"searchKey\"\n          />\n        </label>\n        <button type=\"submit\" className=\"SearchFormButton\"></button>\n      </form>\n      {isLoading && <Loader />}\n      {error && <p className=\"error\">Error: {error}</p>}\n      {movieDetails && (\n        <div>\n          <h1>Search Results</h1>\n          <ul>\n            {movieDetails.results.map(movie => (\n              <li key={movie.id}>\n                <Link state={{ form: location }} to={`/movies/${movie.id}`}>\n                  {movie.original_title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n          {/* <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Reviews />} />\n          </Routes> */}\n        </div>\n      )}\n    </StyledMovies>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","defaultImg","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","location","useLocation","console","log","queryValue","get","useEffect","fetchSearchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","concat","sent","t0","message","finish","stop","apply","arguments","_jsxs","StyledMovies","children","className","onSubmit","e","preventDefault","value","currentTarget","elements","searchKey","query","_jsx","type","required","placeholder","name","Loader","results","map","movie","Link","state","form","to","id","original_title"],"sourceRoot":""}