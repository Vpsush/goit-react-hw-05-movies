{"version":3,"file":"static/js/89.89c12d04.chunk.js","mappings":"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","sources":["additional/const.jsx","additional/function.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx"],"sourcesContent":["export const API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'additional/const';\n\nexport const fetchActors = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchReview = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchDayMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesDetails = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return data;\n};\n","// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// const API_KEY = 'c22cf15536964c1cf38cb65c76fb41a1';\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// export default class MoviestList extends Component {\n//   state = {\n//     movies: [],\n//     isLoading: false,\n//     error: null,\n//   };\n\n//   componentDidMount() {\n//     this.fetchMovies();\n//   }\n\n//   fetchMovies = async () => {\n//     try {\n//       this.setState({ isLoading: true });\n//       const { data } = await axios.get(\n//         `trending/movie/day?language=en-US&api_key=${API_KEY}`\n//       );\n//       this.setState({ movies: data.results });\n//     } catch (error) {\n//       this.setState({ error: error.message });\n//     } finally {\n//       this.setState({ isLoading: false });\n//     }\n//   };\n\n//   render() {\n//     const { movies, isLoading, error } = this.state;\n\n//     return (\n//       <div>\n//         <h1>Trending today</h1>\n//         {isLoading && <p>Loading...</p>}\n//         {error && <p>Error: {error}</p>}\n//         {movies && (\n//           <ul>\n//             {movies.map(movie => (\n//               <li key={movie.id}>{movie.original_title}</li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\nimport React, { useEffect, useState } from 'react';\n// import axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { fetchDayMovies } from 'additional/function'; // Assuming this path is correct\n// import { BASE_URL, API_KEY } from 'additional/const';\n\nconst MoviestList = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        setError(null); // Reset error on each fetch\n        const data = await fetchDayMovies(); // Use the function from fetchFunctions.js\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to ensure it runs only once on mount\n\n  return (\n    <div>\n      <h1 className=\"titleToday\">Trending today</h1>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.original_title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MoviestList;\n","import React, { useState, useEffect } from 'react';\n// import { NavLink } from 'react-router-dom';\n// import MoviesPageDetails from './MoviesPageDetails';\nimport axios from 'axios';\nimport { API_KEY, BASE_URL } from 'additional/const';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from '../components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    const fetchDayMovies = async () => {\n      try {\n        const { data } = await axios.get(\n          `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n        );\n        setMovie(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDayMovies();\n  }, [movieId]);\n\n  return (\n    <div>\n      <div>\n        {isLoading && <Loader />}\n        {error && <p>Error: {error}</p>}\n        {/* <NavLink to=\"movies/:movieId\"> */}\n        <MoviesList movie={movie} />\n        {/* </NavLink> */}\n      </div>\n      {/* <Routes>\n        <Route path=\"movies/:movieId\" element={<MoviesPageDetails />}></Route>\n      </Routes> */}\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","BASE_URL","defaultImg","fetchActors","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","_yield$axios$get","data","_context","prev","next","axios","concat","sent","abrupt","stop","_x","apply","arguments","fetchReview","_ref2","_callee2","_yield$axios$get2","_context2","_x2","fetchDayMovies","_ref3","_callee3","_yield$axios$get3","_context3","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","results","t0","message","finish","_jsxs","children","_jsx","className","map","movie","Link","to","id","original_title","useParams","setMovie","cast","Loader","MoviesList"],"sourceRoot":""}